
--[[ test how much room posts will take up in redis sorted set
      if we just store the id
      need one sorted set for score, another for date

      can probably store all post ids in redis
      will either need to LRU post data and comment data or archive
--]]


local redis = require 'redis'
local client = redis.connect('127.0.0.1', 6379)


function testposts()
  for i = 1, 1000000 do
    client:zadd('posts',i,i)
  end
  -- 1 million id's = 104 meg used
end



function commentSize()
  local string10k = ''
  -- 100,000 10k character strings use 1.15GB ram
  local string1k = 'WWrcVigJ7up1YujZsqSvqFtjZUZ0ORanfPiPHTS32wiJRxyatot25FAjJU7Pj7fsjnlAQxuYohDsSBFCNmRO00ya6S4UHGF1J8PbJNpqAmkhW4B32B9fI9fXCA37VgezUcAzXpEOlb05w0J5OyyPBmM65zpXeCx4WuP62e2SbFvD2DjlSukkLIINcnCrY8Mo97CJ1zXvlCZNjeGM6jNpJjlgn7BhUoAIvn89kxHXSCJz0g30DBoA3zfIbh60Oycit7Tl3ughS3BtTOg5qqyPMbWcWtB7wJ4DpNyFGoyaS2sRvbgUEbxGDQXf4TeJWX2hn8PM7AVjE3pPbAFFq7SYnbOkqN0TIYJQVhFlGVX7N9Wfm7Sp2V4Xz7Jv8xgDio745ebzbYhP2SZOOQrU328PV2X7uJ6JXlKrsemHoZ7Yvi8VH8KLymWHb4XPHeF3Uqb6kb8fh1XeTZsCx5Z7fSr0jCm98b491oCN8I9p2rzrmQOMYS3EqWVwpgcBEuA6sUlPqDqjUOxK3M7yYG1moFq3N1DUTzo5pVl284HTLbzKmqMbqmxm0DM1qBfxJPgWjcqSmRJINM0FhtVQYovKqEz4MF1hh0wDwzTmMFD9kvDWh8sfVl70LTZIfYLQcpkVSrzz9KNo58vXn9b9fVo647XoHGSy2EqAAJcZ5kYsmMO1E19Kx9vl4sQEHoKm1P0b8SUHL6f3kUYrG3tLVinnCniH1LPV6gTCwEuuRZqtjAVePPgN5icwcQYovPJ7inAFfXrlSxpeaAJxl0yPOL30loX2hjETj0xqGJgavDnzgNJJaL0wjVstORFM1uglfeIDmxwPsFNJqbi70nMHgZ1TTnOtZKkAOU04RO9JNUXFMLng0ISSMjVv1YfyfJXc5i9axTGqJBMZcwIakUaI4JtJCZw1ucqa3LOycES8nTxVwqWcnKHbCKWnp2pcIpaS5A7nLEBy2tDO3negqtK33flsmnoOaG7nk5eGQAnZU7xfM5g4'
  -- 1,000,000 1k character strings use 1.02GB ram
  for i = 1, 1000000 do
    client:set(i,string1k)
  end

end

function voteSize()

  for i = 1, 1000000 do
    client:set('comments'..i,'(1000000,,1)')
  end
  -- 1 million votes uses 115.2MBram

end

voteSize()
